openapi: 3.1.0

info:
  title: Sonetel Developer Documentation
  version: '1.0'
  description:
    $ref: 'description.yml#/introduction'

  contact:
    name: Sonetel API Support
    email: api.support@sonetel.com
  termsOfService: 'https://sonetel.com/en/help/help-topics/terms-conditions/terms-conditions/'

servers:
  - url: 'https://beta-api.sonetel.com'
    description: production

tags:
  - name: Account
    description: >-
      View information about your Sonetel account and update some settings such as language & timezone.

  - name: Users
    description: Lets you manage the users in your account.

  - name: Phone Numbers
    description: >-
      Purchase phone numbers from 50+ countries across the world

  - name: Make Calls
    description: >-
      Make international calls using Sonetel's award winning service at the cost of local calls.

      Use our Callback call API to place calls to your contacts.

paths:
  /account/{accountid}/phonenumbersubscription:
    get:
      $ref: 'reference/phone_numbers.yaml'
    post:
      $ref: 'reference/phone_numbers.yaml'

components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      description: |
        ## OAuth Authentication

        All API requests that deal with private data such as user details, phone number subscriptions and so on require authentication in the form of a [bearer token](https://www.oauth.com/oauth2-servers/differences-between-oauth-1-2/bearer-tokens/).

        You can use this endpoint to create a token using your registered email address & password. This token is passed in the Authorization header of the request.

        Copy the `access_token` from the response body and add it to the request header to authenticate your API requests. Usage: `Authorization: Bearer <ACCESS_TOKEN>`

        <!-- theme: info -->

        > Access tokens have an expiry of 24 hours. Use the `refresh_token` to generate a new access token.

        <!--
        type: tab
        title: curl
        -->

        ```c
        curl \
          -u sonetel-web:sonetel-web \
          --request POST 'https://api.sonetel.com/SonetelAuth/beta/oauth/token' \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --form 'grant_type=password' \
          --form 'password=YOUR_SONETEL_PASSWORD' \
          --form 'refresh=yes' \
          --form 'username=YOUR_SONETEL_USERNAME'
        ```

        <!--
        type: tab
        title: Python
        -->

        ```python
        import requests
        import urllib.parse
        import os

        '''
        This script uses the Content-Type 'application/x-www-form-urlencoded' to demonstrate that your application can use either 'multipart/form-data' or 'application/x-www-form-urlencoded' when requesting for an access token.
        '''

        url = "https://api.sonetel.com/SonetelAuth/beta/oauth/token"

        '''
        This script assumes that your Sonetel credentials are present as environment variables.

        Do not hard code your credentials in your application, use the security best practices to protect your credentials from being compromised.
        '''

        sonetelUsername = os.environ.get('SonetelUsername')
        sonetelPassword = os.environ.get('SonetelPassword')
        grantType = 'password'

        payload= { 
            'grant_type' : grantType,
            'password' : sonetelPassword,
            'refresh' :'yes',
            'username' :  sonetelUsername
            }

        payloadEncoded = urllib.parse.urlencode(payload)

        headers = {
          'Accept': 'application/json, text/plain',
          'Content-Type': 'application/x-www-form-urlencoded'
        }

        response = requests.request(
            "POST", 
            url, 
            data=payloadEncoded, 
            headers=headers
            )

        if response.status_code == 200:
            print(response.json())
        else:
            print(response.text)
        ```

        <!-- type: tab-end -->

security:
  - bearer_auth: []